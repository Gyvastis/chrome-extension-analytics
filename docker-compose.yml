version: '3.8'

services:
  mongodb:
    image: mongo:7
    container_name: chrome-analytics-mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: chrome_analytics
    volumes:
      - mongodb_data:/data/db
      - ./backend/scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - chrome-analytics

  redis:
    image: redis:7-alpine
    container_name: chrome-analytics-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - chrome-analytics

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: chrome-analytics-backend
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - MONGO_URI=mongodb://admin:password123@mongodb:27017/chrome_analytics?authSource=admin
      - REDIS_URL=redis://redis:6379
      - PORT=8080
      - GIN_MODE=debug
    volumes:
      - ./backend:/app
      - /app/tmp
    depends_on:
      - mongodb
      - redis
    networks:
      - chrome-analytics
    command: air -c .air.toml

  browser-scraper:
    build:
      context: ./browser-scraper
      dockerfile: Dockerfile
    container_name: chrome-analytics-browser-scraper
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - CHROME_BIN=/usr/bin/chromium-browser
    networks:
      - chrome-analytics
    # Add memory limits for browser
    mem_limit: 512m
    memswap_limit: 512m

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: chrome-analytics-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8080
      - NODE_ENV=development
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    networks:
      - chrome-analytics

networks:
  chrome-analytics:
    driver: bridge

volumes:
  mongodb_data:
  redis_data: